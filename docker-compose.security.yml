version: '3.8'

networks:
  security_net:
    driver: bridge

volumes:
  postgres_data:
  keycloak_data:
  grafana_data:
  prometheus_data:
  wazuh_data:

services:
  # PostgreSQL Database with Security
  postgres:
    image: postgres:15-alpine
    container_name: security-postgres
    restart: unless-stopped
    networks:
      - security_net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=security_db
      - POSTGRES_USER=security_admin
      - POSTGRES_PASSWORD=SecurePassword123!
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U security_admin -d security_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Keycloak Identity Management
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: security-keycloak
    restart: unless-stopped
    networks:
      - security_net
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=AdminPassword123!
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/security_db
      - KC_DB_USERNAME=security_admin
      - KC_DB_PASSWORD=SecurePassword123!
      - KC_HOSTNAME=localhost
      - KC_HTTP_ENABLED=true
    command: start-dev
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy

  # Grafana Analytics with Privacy Settings
  grafana:
    image: grafana/grafana:10.2.0
    container_name: security-grafana
    restart: unless-stopped
    networks:
      - security_net
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=GrafanaAdmin123!
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_SECURITY_COOKIE_SAMESITE=strict
      - GF_LOG_MODE=console
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    ports:
      - "3000:3000"

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: security-prometheus
    restart: unless-stopped
    networks:
      - security_net
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"

  # Wazuh Manager for Security Monitoring
  wazuh-manager:
    image: wazuh/wazuh-manager:4.7.0
    container_name: security-wazuh-manager
    restart: unless-stopped
    networks:
      - security_net
    volumes:
      - wazuh_data:/var/ossec/data
    environment:
      - WAZUH_MANAGER_ADMIN_PASSWORD=WazuhAdmin123!
    ports:
      - "1514:1514"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"

  # Nginx for GDPR Compliance Portal
  gdpr-portal:
    image: nginx:alpine
    container_name: security-gdpr-portal
    restart: unless-stopped
    networks:
      - security_net
    volumes:
      - ./config/security:/usr/share/nginx/html
    ports:
      - "8090:80"

