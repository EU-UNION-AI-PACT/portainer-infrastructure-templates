version: '3.8'

services:
  nextjs:
    image: node:18-alpine
    restart: unless-stopped
    working_dir: /app
    environment:
      NODE_ENV: ${NODE_ENV}
      DATABASE_URL: ${DATABASE_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      REDIS_URL: ${REDIS_URL}
    ports:
      - '${NEXTJS_PORT}:3000'
    volumes:
      - ./nextjs-app:/app
      - /app/node_modules
      - /app/.next
    command: sh -c "npm install && npm run build && npm start"
    depends_on:
      - postgres
      - redis
    networks:
      - nextjs_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: nextjsapp
      POSTGRES_USER: nextjs
      POSTGRES_PASSWORD: SecureDB123!
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nextjs_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nextjs"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - nextjs_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - nextjs
    networks:
      - nextjs_network

volumes:
  postgres_data:
  redis_data:

networks:
  nextjs_network:
    driver: bridge