version: '3.8'

services:
  # Vaultwarden (Keeper Alternative)
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=${SIGNUPS_ALLOWED:-true}
      - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN:-your-secure-admin-token}
      - DOMAIN=${DOMAIN:-https://localhost}
    volumes:
      - vaultwarden-data:/data
    ports:
      - "8080:80"
    networks:
      - free-security-net

  # Keycloak (Auth0 Alternative)
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: unless-stopped
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD:-keycloak123}
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_ENABLED=true
    ports:
      - "8081:8080"
    depends_on:
      - keycloak-db
    command: start-dev
    networks:
      - free-security-net

  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD:-keycloak123}
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - free-security-net

  # Authentik (Authy/Auth0 Alternative)
  authentik-server:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-db
      - AUTHENTIK_POSTGRESQL__USER=authentik
      - AUTHENTIK_POSTGRESQL__NAME=authentik
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_DB_PASSWORD:-authentik123}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY:-your-secret-key-50-chars-long}
    volumes:
      - authentik-media:/media
      - authentik-custom-templates:/templates
    ports:
      - "8082:9000"
      - "8443:9443"
    depends_on:
      - authentik-db
      - authentik-redis
    networks:
      - free-security-net

  authentik-worker:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-db
      - AUTHENTIK_POSTGRESQL__USER=authentik
      - AUTHENTIK_POSTGRESQL__NAME=authentik
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_DB_PASSWORD:-authentik123}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY:-your-secret-key-50-chars-long}
    volumes:
      - authentik-media:/media
      - authentik-custom-templates:/templates
    depends_on:
      - authentik-db
      - authentik-redis
    networks:
      - free-security-net

  authentik-db:
    image: postgres:15
    container_name: authentik-db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${AUTHENTIK_DB_PASSWORD:-authentik123}
      - POSTGRES_USER=authentik
      - POSTGRES_DB=authentik
    volumes:
      - authentik-db-data:/var/lib/postgresql/data
    networks:
      - free-security-net

  authentik-redis:
    image: redis:alpine
    container_name: authentik-redis
    restart: unless-stopped
    command: --save 60 1 --loglevel warning
    volumes:
      - authentik-redis-data:/data
    networks:
      - free-security-net

  # Authelia (FrontEgg Alternative)
  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    restart: unless-stopped
    environment:
      - AUTHELIA_JWT_SECRET=${AUTHELIA_JWT_SECRET:-your-jwt-secret}
      - AUTHELIA_SESSION_SECRET=${AUTHELIA_SESSION_SECRET:-your-session-secret}
      - AUTHELIA_STORAGE_ENCRYPTION_KEY=${AUTHELIA_STORAGE_ENCRYPTION_KEY:-your-encryption-key}
    volumes:
      - authelia-config:/config
    ports:
      - "8083:9091"
    networks:
      - free-security-net

  # FusionAuth (Okta Alternative)
  fusionauth:
    image: fusionauth/fusionauth-app:latest
    container_name: fusionauth
    restart: unless-stopped
    environment:
      - DATABASE_URL=jdbc:postgresql://fusionauth-db:5432/fusionauth
      - DATABASE_ROOT_USERNAME=fusionauth
      - DATABASE_ROOT_PASSWORD=${FUSIONAUTH_DB_PASSWORD:-fusionauth123}
      - DATABASE_USERNAME=fusionauth
      - DATABASE_PASSWORD=${FUSIONAUTH_DB_PASSWORD:-fusionauth123}
      - FUSIONAUTH_APP_MEMORY=${FUSIONAUTH_APP_MEMORY:-512M}
      - FUSIONAUTH_APP_RUNTIME_MODE=development
    ports:
      - "8084:9011"
    depends_on:
      - fusionauth-db
    networks:
      - free-security-net

  fusionauth-db:
    image: postgres:15
    container_name: fusionauth-db
    restart: unless-stopped
    environment:
      - PGUSER=fusionauth
      - POSTGRES_USER=fusionauth
      - POSTGRES_PASSWORD=${FUSIONAUTH_DB_PASSWORD:-fusionauth123}
      - POSTGRES_DB=fusionauth
    volumes:
      - fusionauth-db-data:/var/lib/postgresql/data
    networks:
      - free-security-net

  # Passbolt (Team Password Manager)
  passbolt:
    image: passbolt/passbolt:latest-ce
    container_name: passbolt
    restart: unless-stopped
    environment:
      - APP_FULL_BASE_URL=${PASSBOLT_BASE_URL:-https://passbolt.local}
      - DATASOURCES_DEFAULT_HOST=passbolt-db
      - DATASOURCES_DEFAULT_USERNAME=passbolt
      - DATASOURCES_DEFAULT_PASSWORD=${PASSBOLT_DB_PASSWORD:-passbolt123}
      - DATASOURCES_DEFAULT_DATABASE=passbolt
    volumes:
      - passbolt-gpg:/etc/passbolt/gpg
      - passbolt-jwt:/etc/passbolt/jwt
    ports:
      - "8085:80"
      - "8444:443"
    depends_on:
      - passbolt-db
    networks:
      - free-security-net

  passbolt-db:
    image: mariadb:latest
    container_name: passbolt-db
    restart: unless-stopped
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=true
      - MYSQL_DATABASE=passbolt
      - MYSQL_USER=passbolt
      - MYSQL_PASSWORD=${PASSBOLT_DB_PASSWORD:-passbolt123}
    volumes:
      - passbolt-db-data:/var/lib/mysql
    networks:
      - free-security-net

volumes:
  vaultwarden-data:
  keycloak-db-data:
  authentik-media:
  authentik-custom-templates:
  authentik-db-data:
  authentik-redis-data:
  authelia-config:
  fusionauth-db-data:
  passbolt-gpg:
  passbolt-jwt:
  passbolt-db-data:

networks:
  free-security-net:
    driver: bridge
